@using Markdig;
@inject MarkdownPipeline pipeline;

@page "/"

<div class="card vh-100">
    <div class="card-body d-flex flex-column flex-fill overflow-hidden">
        <h5 class="card-title flex-shrink-0 d-flex justify-content-between align-items-center flex-wrap">
            <span>Markdown to Html</span>
            <button type="button" class="ml-auto btn btn-light btn-sm" @onclick="Format">Format</button>
        </h5>
        <div class="flex-fill d-flex align-items-stretch overflow-hidden">
            <textarea class="form-control w-100 mr-1" @bind="input" @oninput="ToMarkup"></textarea>
            <div class="form-control h-auto w-100 ml-1 overflow-auto rounded">
                @html
            </div>
        </div>
    </div>
</div>

@code {
    private string input = string.Empty;
    private MarkupString html;

    private void Format(MouseEventArgs args)
    {
        var normalized = Markdown.Normalize(input, pipeline: pipeline);
        input = normalized.Substring(0, normalized.LastIndexOf("[]:"));

        StateHasChanged();
    }

    private void ToMarkup(ChangeEventArgs e)
    {
        input = (e.Value?.ToString() ?? string.Empty);
        html = (MarkupString)Markdown.ToHtml(input, pipeline);
        StateHasChanged();
    }
}
